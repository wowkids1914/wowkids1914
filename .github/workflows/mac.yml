on:
  workflow_dispatch:
    inputs:
      os:
        description: '系统'
        required: true
        default: 'macos-latest'
        type: choice
        options:
          - windows-latest
          - ubuntu-latest
          - macos-latest
      
      port:
        description: '端口'
        required: true
        default: '5900'
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

run-name: '${{ inputs.os }} ${{ inputs.port }}'

env:
  TZ: Asia/Shanghai

jobs:
  job:
    runs-on: ${{ inputs.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Write to frpc.toml
        shell: bash
        run: |
          cat << EOF > frpc.toml
          user = "VirtualMachine"

          serverAddr = "70.36.96.27"
          serverPort = 7000
          loginFailExit = true

          auth.method = "token"
          auth.token = "2f1d3a0e-9b64-4b91-b76b-8cb4a2f2e5d3"

          [[proxies]]
          name = "fiddler"
          type = "tcp"
          localIP = "127.0.0.1"
          localPort = 8866
          remotePort = 8866

          [[proxies]]
          name = "rdp${{ inputs.port }}"
          type = "tcp"
          localIP = "${{ runner.os == 'Windows' && '127.0.0.1' || '172.17.0.1' }}"
          localPort = 1234
          remotePort = ${{ inputs.port }}

          EOF

          if [[ "$RUNNER_OS" != "Windows" ]]; then
          cat << EOF >> frpc.toml
          [[proxies]]
          name = "ss"
          type = "tcp"
          localIP = "172.17.0.1"
          localPort = 8388
          remotePort = 8389
          EOF
          fi

      - name: 运行Windows
        if: ${{ runner.os == 'Windows' }}
        run: |
          net user runneradmin mynewpassword@112233

          tzutil /s "China Standard Time"
          # 显示文件扩展名
          reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v HideFileExt /t REG_DWORD /d 0 /f
          # 显示隐藏文件
          reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v Hidden /t REG_DWORD /d 1 /f
          # 重启生效
          taskkill /f /im explorer.exe
          start explorer.exe

          netsh interface portproxy add v4tov4 listenport=1234 listenaddress=0.0.0.0 connectport=3389 connectaddress=127.0.0.1
          Start-Process -FilePath "frpc" -ArgumentList "-c frpc.toml" -NoNewWindow

          # curl -L -O https://gosspublic.alicdn.com/ossbrowser/1.18.0/oss-browser-win32-x64.zip?spm=a2c4g.11186623.0.0.a371450fzLHNZ2&file=oss-browser-win32-x64.zip
          # curl -L -O https://cdn.mysql.com//Downloads/MySQLGUITools/mysql-workbench-community-8.0.42-winx64.msi
          # curl -L -O https://autoupdate.termius.com/windows/Install%20Termius.exe
          # curl -L -O https://github.com/rustdesk/rustdesk/releases/download/1.3.9/rustdesk-1.3.9-x86_64.exe

          # https://community.chocolatey.org/packages

          # choco install sublimetext4
          # echo "::group::vscode"
          # choco install vscode
          # echo "::endgroup::"

          # echo "::group::termius"
          # choco install termius
          # echo "::endgroup::"

          # timeout /t -1
          Start-Sleep -Seconds 86400

      - name: 运行Linux
        if: ${{ runner.os == 'Linux' }}
        run: | 
          # 修改或添加 PasswordAuthentication yes
          grep -q '^#\?PasswordAuthentication' /etc/ssh/sshd_config \
            && sudo sed -i 's/^#\?PasswordAuthentication.*/PasswordAuthentication yes/' /etc/ssh/sshd_config \
            || echo 'PasswordAuthentication yes' | sudo tee -a /etc/ssh/sshd_config

          grep -q '^#\?PasswordAuthentication' /etc/ssh/sshd_config.d/*.conf \
            && sudo sed -i 's/^#\?PasswordAuthentication.*/PasswordAuthentication yes/' /etc/ssh/sshd_config.d/*.conf \
            || echo 'PasswordAuthentication yes' | sudo tee -a /etc/ssh/sshd_config.d/*.conf
          
          sudo systemctl restart ssh

          echo "runner:mynewpassword" | sudo chpasswd
          docker run -d -p 1234:1234 --restart=always alpine/socat TCP-LISTEN:1234,fork TCP:172.17.0.1:22
          docker run -d --name frpc -v ./frpc.toml:/etc/frp/frpc.toml snowdreamtech/frpc
          
          # docker run -d \
          #   --name socks5-proxy \
          #   --restart unless-stopped \
          #   -p 1080:1080 \
          #   -e PROXY_USER=proxyuser \
          #   -e PROXY_PASSWORD=4d21b3bb-4186-4a9d-8448-510b4dae395f \
          #   serjs/go-socks5-proxy

          docker run -d \
            --restart unless-stopped \
            -p 8388:8388/tcp \
            -p 8388:8388/udp \
            -e TZ=Asia/Shanghai \
            -e METHOD=aes-256-gcm \
            -e PASSWORD=6a17a5dd-5f76-4b09-b567-9b0d5d449da5 \
            shadowsocks/shadowsocks-libev

          docker logs -f frpc

      # - name: 安装图形界面
      #   if: ${{ runner.os == 'Linux' }}
      #   run: |
      #     start_time=$(date +%s)

      #     docker run -d -p 1236:1234 --restart=always alpine/socat TCP-LISTEN:1234,fork TCP:172.17.0.1:3389
      #     sudo apt update
      #     sudo apt install xrdp -y

      #     sudo apt install xfce4 xfce4-goodies -y
      #     echo xfce4-session > ~/.xsession

      #     # sudo apt install lxqt -y
      #     # echo "startlxqt" > ~/.xsession

      #     sudo systemctl enable xrdp
      #     sudo systemctl start xrdp

      #     end_time=$(date +%s)
      #     total_time=$(echo "scale=1; ($end_time - $start_time) / 60" | bc)

      #     echo "总耗时: $total_time 分钟"

      #     docker logs -f frpc

      - name: 运行macOS
        if: ${{ runner.os == 'macOS' }}
        run: |
          docker run -d -p 1234:1234 --restart=always alpine/socat TCP-LISTEN:1234,fork TCP:172.17.0.1:5900
          docker run -d --name frpc -v ./frpc.toml:/etc/frp/frpc.toml snowdreamtech/frpc
          
          docker logs -f frpc
